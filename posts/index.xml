<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on bram85</title><link>https://www.bram85.nl/posts/</link><description>bram85 (Posts)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 07 May 2022 10:40:00 +0200</lastBuildDate><atom:link href="https://www.bram85.nl/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Spotify Blend</title><link>https://www.bram85.nl/posts/chirp-spotify-blend/</link><pubDate>Sat, 07 May 2022 10:40:00 +0200</pubDate><guid>https://www.bram85.nl/posts/chirp-spotify-blend/</guid><description>&lt;p>It&amp;rsquo;s kind of amazing how Spotify introduces the Blend feature, which is &lt;em>only&lt;/em> accessible when typing &lt;em>blend&lt;/em> as a search term. The Spotify UI never ceases to amaze me.&lt;/p></description></item><item><title>Interstellar</title><link>https://www.bram85.nl/posts/interstellar/</link><pubDate>Fri, 06 May 2022 21:02:00 +0200</pubDate><guid>https://www.bram85.nl/posts/interstellar/</guid><description>&lt;p>Afgelopen week heb ik de film &lt;a href="https://www.imdb.com/title/tt0816692/?ref_=fn_al_tt_1">Interstellar&lt;/a> gekeken. Ik heb er een gemengd gevoel aan overgehouden. It isn&amp;rsquo;t stellar.&lt;/p>
&lt;p>Voor het verhaal en de personages hoef je het niet te doen. Weinig diepgang en weinig drama. Met de acteur Matthew McConaughey in de hoofdrol krijg je wel al snel een &lt;em>Contact&lt;/em> vibe, maar helaas heeft deze film minder persoonlijke touch in z&amp;rsquo;n mars. Best knap voor een film die bijna drie uur duurt.&lt;/p>
&lt;p>En toch wist het me ergens wel te raken, het was tegelijkertijd mysterieus maar ook wetenschappelijk onderbouwd. Nu lees ik momenteel het boek van Heino Falcke (&lt;em>Licht in de duisternis&lt;/em>) die het als eerste mogelijk maakte om een zwart gat te fotograferen. In dat boek staat een uitgebreide voorbespreking over Einsteins ideeen over ruimte, tijd en relativiteit. Interstellar is een aardige artistieke impressie wat je met deze concepten kan doen. Reizen door een wormgat bijvoorbeeld, de onwerkelijke kracht van een zwart gat en de relativiteit van tijd. Het zijn natuurkundige concepten die voor een menselijk brein bijna niet te bevatten zijn, en eigenlijk bijna aandoen als magie. Met Interstellar krijg je toch een beetje een inkijkje in een leven waar die concepten iets meer gemeengoed zijn, en dat is daarmee het enige bekijkenswaardige van de film.&lt;/p></description></item><item><title>Enable history expansion with eshell</title><link>https://www.bram85.nl/posts/enable-history-expansion-with-eshell/</link><pubDate>Fri, 06 May 2022 16:27:00 +0200</pubDate><guid>https://www.bram85.nl/posts/enable-history-expansion-with-eshell/</guid><description>&lt;p>For some reason, history expansion through &lt;code>!&lt;/code> notation is not enabled by default in Emacs eshell. The variable &lt;code>eshell-expand-input-functions&lt;/code> needs to be extended as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-elisp" data-lang="elisp">&lt;span style="display:flex;">&lt;span>(add-to-list &lt;span style="color:#e6db74">&amp;#39;eshell-expand-input-functions&lt;/span> &lt;span style="color:#e6db74">&amp;#39;eshell-expand-history-references&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or, to be specific, add it to the &lt;code>eshell-hist-load-hook&lt;/code> otherwise the addition operation may complain that the list does not exist when eshell hasn&amp;rsquo;t loaded yet. An example is shown below if you use &lt;code>use-package&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-elisp" data-lang="elisp">&lt;span style="display:flex;">&lt;span>(use-package eshell
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :commands eshell
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :hook
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (eshell-hist-load &lt;span style="color:#f92672">.&lt;/span> (lambda () (add-to-list &lt;span style="color:#e6db74">&amp;#39;eshell-expand-input-functions&lt;/span> &lt;span style="color:#e6db74">&amp;#39;eshell-expand-history-references&lt;/span>))))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Emacs Lisp: Expand macros</title><link>https://www.bram85.nl/posts/emacs-lisp-expand-macros/</link><pubDate>Wed, 27 Apr 2022 21:02:00 +0200</pubDate><guid>https://www.bram85.nl/posts/emacs-lisp-expand-macros/</guid><description>&lt;p>To expand a macro, the &lt;code>pp-macroexpand-last-sexp&lt;/code> is a useful function. It&amp;rsquo;s like &lt;code>pp-eval-last-sexp&lt;/code>, but opens a new buffer with the expanded code without evaluation.&lt;/p>
&lt;p>For example, it&amp;rsquo;s easy to inspect the magic behind &lt;code>use-package&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-elisp" data-lang="elisp">&lt;span style="display:flex;">&lt;span>(use-package org)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>is transformed by &lt;code>pp-macroexpand-last-sexp&lt;/code> to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-elisp" data-lang="elisp">&lt;span style="display:flex;">&lt;span>(progn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (straight-use-package &lt;span style="color:#e6db74">&amp;#39;org&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defvar use-package--warning117
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>(lambda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (keyword err)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (let
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ((msg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">format&lt;/span> &lt;span style="color:#e6db74">&amp;#34;%s/%s: %s&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;org&lt;/span> keyword
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">error-message-string&lt;/span> err))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (display-warning &lt;span style="color:#e6db74">&amp;#39;use-package&lt;/span> msg :error))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (condition-case-unless-debug err
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (if
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (not
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (require &lt;span style="color:#e6db74">&amp;#39;org&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#66d9ef">t&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (display-warning &lt;span style="color:#e6db74">&amp;#39;use-package&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">format&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Cannot load %s&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;org&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :error))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">error&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">funcall&lt;/span> use-package--warning117 :catch err))))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Of course it becomes more elaborate with &lt;code>:config&lt;/code>, &lt;code>:bind&lt;/code>, &lt;code>:hook&lt;/code> flags, but you get the idea.&lt;/p></description></item><item><title>There is a consult-ag package</title><link>https://www.bram85.nl/posts/consult-ag-package/</link><pubDate>Tue, 26 Apr 2022 15:48:00 +0200</pubDate><guid>https://www.bram85.nl/posts/consult-ag-package/</guid><description>&lt;p>A new package appeared on MELPA: &lt;a href="https://github.com/yadex205/consult-ag">consult-ag&lt;/a>, similar to &lt;code>consult-grep&lt;/code> and &lt;code>consult-ripgrep&lt;/code> but then for &lt;a href="https://github.com/ggreer/the_silver_searcher">The Silver Searcher&lt;/a>. Glad it&amp;rsquo;s here because my attempt to add &lt;code>ag&lt;/code> support failed.&lt;/p></description></item><item><title>Emacs</title><link>https://www.bram85.nl/posts/chirp-emacs-emacs/</link><pubDate>Tue, 26 Apr 2022 15:01:00 +0200</pubDate><guid>https://www.bram85.nl/posts/chirp-emacs-emacs/</guid><description>&lt;p>Observation: Emacs is primarily used to configure Emacs.&lt;/p></description></item><item><title>Dump all dictionary words with aspell</title><link>https://www.bram85.nl/posts/dump-all-dictionary-words-with-aspell/</link><pubDate>Mon, 25 Apr 2022 16:40:00 +0200</pubDate><guid>https://www.bram85.nl/posts/dump-all-dictionary-words-with-aspell/</guid><description>&lt;p>To dump all words in an aspell dictionary, use the following command.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>aspell -d en dump master
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>