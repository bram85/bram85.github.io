<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tech on bram85</title><link>https://www.bram85.nl/categories/tech/</link><description>bram85 (Tech)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 21 May 2022 08:04:00 +0200</lastBuildDate><atom:link href="https://www.bram85.nl/categories/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>Use tab-bar-history-mode instead of winner-mode</title><link>https://www.bram85.nl/posts/use-tab-bar-history-instead-of-winner-mode/</link><pubDate>Sat, 21 May 2022 08:04:00 +0200</pubDate><guid>https://www.bram85.nl/posts/use-tab-bar-history-instead-of-winner-mode/</guid><description>&lt;p>&lt;code>winner-mode&lt;/code> is a minor mode in Emacs which remembers your window configurations. You can go back to an older window configuration, by default with &lt;em>C-c &amp;lt;left&amp;gt;&lt;/em> (and &lt;em>C-c &amp;lt;right&amp;gt;&lt;/em> to move forward). However, &lt;code>winner-mode&lt;/code> is tab-unaware, which messes up your window configuration when you&amp;rsquo;ve switched tabs in the meantime. Luckily, there is &lt;code>tab-bar-history-mode&lt;/code> which does the same, except it stores the window configuration per tab. By using the same bindings as &lt;code>winner-mode&lt;/code> it becomes a drop-in replacement.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-elisp" data-lang="elisp">&lt;span style="display:flex;">&lt;span>(use-package tab-bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (tab-bar-history-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :bind
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;C-c &amp;lt;left&amp;gt;&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> tab-bar-history-back)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;C-c &amp;lt;right&amp;gt;&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> tab-bar-history-forward))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that &lt;code>tab-bar-history-back&lt;/code> and &lt;code>tab-bar-history-forward&lt;/code> do not behave well when called interactively from a minibuffer window. The minibuffer may actually change the window configuration, pushing one to the history, which results in &lt;code>tab-bar-history-back&lt;/code> popping the window configuration you were looking at in the first place, so essentially becoming a no-op. By binding these functions to some keys, the functions behave as they should.&lt;/p></description></item></channel></rss>